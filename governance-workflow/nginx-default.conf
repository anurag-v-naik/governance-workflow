# nginx-default.conf - Server Configuration for Data Governance Tool

server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security headers
    include /etc/nginx/conf.d/security-headers.conf;

    # Compression
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        limit_req zone=assets burst=20 nodelay;
    }

    # Main application
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
        
        # Rate limiting for main application
        limit_req zone=api burst=10 nodelay;
        limit_conn conn_limit_per_ip 10;
    }

    # API endpoints (for future server-side functionality)
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=5 nodelay;
        
        # CORS headers for API
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Proxy to backend (when implemented)
        # proxy_pass http://backend:3000;
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        
        # For now, return method not allowed
        return 501 '{"error": "API not implemented", "message": "Server-side API endpoints are not yet implemented"}';
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 '{"status": "healthy", "timestamp": "$time_iso8601", "version": "1.0.0"}';
        add_header Content-Type application/json;
    }

    # Metrics endpoint (for monitoring)
    location /metrics {
        access_log off;
        stub_status on;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~* \.(env|log|ini|conf|bak|old|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Prevent access to source maps in production
    location ~* \.map$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block common exploit attempts
    location ~* (eval\(|union.*select|concat.*\(|etc/passwd|boot\.ini) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Logging for debugging (disable in production)
    # access_log /var/log/nginx/governance-access.log main;
    # error_log /var/log/nginx/governance-error.log warn;
}